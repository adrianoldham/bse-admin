<:-.set is_article = article.id and article.id > 0 -:>
<:-.set typename = article.generator.replace(/^(?:BSE::)?Generate::(\w+)$/, "$1") -:>
<:-.set is_new = not(is_article) -:>
<:-.set is_preview = cgi.param("preview") -:>
<:-.wrap "admin/base.tmpl", "title": ( is_preview ? "Preview" : ( is_new ? "New " : "Edit " ) _ typename ) :>

<:-.set referer = request.referer -:>
<:-.set cgi_referer = cgi.param("referer") -:>
<:-.set cgi_r = cgi.param("r") -:>
<:-.set cgi_parentid = cgi.param("parentid") -:>

<:-.if referer =~ cfg.admin_url("admin") -:>
<:-.set done_url = cfg.admin_url("add", { "id": ( cgi_referer ? cgi_referer : article.id ), "preview": 1 }) -:>

<:-.elsif cgi_referer and referer and referer !~ /logon/ -:>
<:-.set done_url = referer.replace(/(&amp;|&|\?)referer=[\d]+/, "").replace(/\.pl&(mp;)?/, ".pl?") -:>

<:-.else -:>
<:-.set done_url = cfg.admin_url("add", { "id": article.parentid }) -:>

<:-.end if -:>

<:-.set object = article -:>
<:-.set is_disabled = @{ name: is_new ? 0 : not(request.user_can("edit_field_edit_" _ name, article )) } -:>

<div class="window">
  <header>
    <:-.set pagetitle = params.title _ ( is_article ? " - " _ ( article.titleAlias or article.title ) _ " (Level " _ article.level _ ")" : "" ) :>
    <:-.if is_new:>
    <h1><:= pagetitle:></h1>
    <:-.else:>
    <ul class="menu header">
      <li>
        <h1><a href="#"><:= pagetitle:></a></h1>
        <ul>
          <li class="disabled"><span><:= article.titleAlias or article.title:> (Level <:= article.level:>)</span></li>
          <li class="divider"></li>
          <:-.set crumbs = [ article.ancestors ] -:>
          <:-.for crumb in crumbs:>
          <li><a href="<:= cfg.admin_url("add", { "id": crumb.id, "referer": 1 }) :>"><:= crumb.titleAlias or crumb.title:> (Level <:= crumb.level:>)</a></li>
          <:-.end for:>
          <li class="divider"></li>
          <li><a href="<:= cfg.admin_url("add", { "id": -1 }) :>" accesskey="h" title="AccessKey = h">Manage Site Articles</a></li>
        </ul>
      </li>
    </ul>
    <a href="<:= cfg.admin_url("menu"):>" accesskey="m" title="AccessKey = m" data-widget="close">Quick Launch</a>
<:include admin/include/toolbar_article.tmpl:>
    <:-.end if:>
  </header>
  <:-.if is_article and not(article.listed) :>
  <p data-role="status" class="warning">
    <:-.if request.user_can("bse_edit_field_edit_listed", article):>
    <a href="<:= cfg.admin_url("add", { "id": article.id, "unhide": 1, "_csrfp": request.get_csrf_token("admin_save_article") }) :>" class="button orange small right">Show</a>
    <:-.end if:>
    This <:= typename:> is hidden, it will not be generated and it will not appear in menus or search results.
  </p>
  <:-.end if:>
  <:-.if is_article and article.is_expired:>
  <p data-role="status" class="warning">
    This <:= typename:> is expired, it will not be generated and it will not appear in menus or search results.
  </p>
  <:-.end if:>
  <form action="<:= cfg.admin_url("add"):>" method="post" enctype="multipart/form-data" data-object="<:= typename:>">
    <input type="hidden" name="lastModified" value="<:= article.lastModified:>" />
    <input type="hidden" name="id" value="<:= article.id:>" />
    <input type="hidden" name="type" value="<:= typename:>" />
    <input type="hidden" name="r" value="

    <:- # from anywhere: refresh to supplied r param -:>
    <:-.if cgi_r -:>
    <:= cgi_r :>
    
    <:-.elsif is_new -:>

        <:- # from nowhere: refresh to article admin on creation -:>
        <:-.if !referer -:>
        <:= cfg.admin_url("add"):>
        
        <:- # from admin children: refresh to children admin on creation -:>
        <:-.elsif referer =~ "kids" -:>
        <:= cfg.admin_url("add", { "id":cgi_parentid, "_t":"kids", "m":typename _ " Created" }):>
        
        <:- # from admin tree: refresh to tree admin on creation -:>
        <:-.elsif referer =~ "tree" -:>
        <:= cfg.admin_url("add", { "id":cgi_parentid, "_t":"tree", "m":typename _ " Created" }):>

        <:- # from admin: refresh to new article admin on creation -:>
        <:-.elsif referer =~ cfg.admin_url("add") -:>
        <:= cfg.admin_url("add", { "m":typename _ " Created" }):>

        <:- # from preview with referer: refresh to top article preview on creation -:>
        <:-.elsif referer -:>
        <:= cfg.admin_url("add", { "id":cgi_referer, "preview":1 }):>

        <:- # from preview: refresh to new article preview on creation -:>
        <:-.elsif referer =~ cfg.admin_url("admin") -:>
        <:= cfg.admin_url("add", { "preview":1 }):>

        <:-.end if -:>
    
    <:-.else -:>

        <:- # from nowhere: refresh to article admin on save changes -:>
        <:-.if !referer -:>
        <:= cfg.admin_url("add", { "id":article.id }):>

        <:- # from admin: refresh to article admin on save changes -:>
        <:-.elsif referer =~ cfg.admin_url("add") -:>
        <:= cfg.admin_url("add", { "id":article.id }):>

        <:- # from preview with referer: refresh to top article preview on save changes -:>
        <:-.elsif cgi_referer -:>
        <:= cfg.admin_url("add", { "id":cgi_referer, "preview":1 }):>

        <:- # from preview: refresh to article preview on save changes -:>
        <:-.elsif referer =~ cfg.admin_url("admin") -:>
        <:= cfg.admin_url("add", { "id":article.id, "preview":1 }):>
        
        <:-.end if -:>

    <:-.end if -:>

    " />
    <:csrfp admin_add_article hidden:>
    <:csrfp admin_save_article hidden:>
    <fieldset>
      <legend>Content</legend>
      <:.call "inlinefield", "name":"title", "field": { "description":"Title", "required":1, "maxlength":255, "class":"full" }, "options": { "disabled":is_disabled("title"), "autofocus":is_new } :>
      <:-.if cfg.entry("title alias", "level" _ article.level):>
      <:.call "inlinefield", "name":"titleAlias", "field": { "description":"Title alias", "maxlength":60 }, "options": { "disabled":is_disabled("titleAlias") } :>
      <:-.end if:>
      <:-.if typename =~ /(Product|Seminar)/:>
      <:.call "inlinefield", "name":"description", "field": { "description":"Description", "maxlength":255, "class":"full" }, "options": { "disabled":is_disabled("description") } :>
      <:-.end if:>
      <:.call "inlinefield", "name":"body", "field": { "description":"Body", "htmltype":"textarea", "class":"full" }, "options": { "disabled":is_disabled("body") } :>
      <:.call "inlinefield", "name":"summary", "field": { "description":"Summary", "htmltype":"textarea", "class":"full" }, "options": { "disabled":is_disabled("summary") } :>
      <:.call "inlinefield", "name":"linkAlias", "field": { "description":"Link alias", "maxlength":255 }, "options": { "disabled":is_disabled("linkAlias") } :>
      <:-.if is_article:>
      <ul class="meta data">
        <li><span><:= typename:> Id</span> <:= article.id:></li>
        <li><span>Created</span> <:= bse.date("%d-%b-%Y / %r", article.created ):></li>
        <li><span>Created by</span> <:= article.createdBy ? article.createdBy : "unknown":></li>
        <li><span>Modified</span> <:= bse.date("%d-%b-%Y / %r", article.lastModified ):></li>
        <li><span>Modified by</span> <:= article.lastModifiedBy ? article.lastModifiedBy : "unknown":></li>
      </ul>
      <:-.end if:>
    </fieldset>
    <:-.if typename eq "Seminar":>
    <fieldset>
      <legend>Session</legend>
      <div class="field">
        <label class="field-label" for="duration">Duration <span class="required">*</span> <:.call "error_img_n", "name":"duration":></label>
        <span class="field-input">
          <:.call "input", "name":"duration", "field": { "required":1, "maxlength":11 }, "options": { "default":60, "placeholder":"minutes", "disabled":is_disabled("duration") } :>
          <:help edit duration:>
        </span>
      </div>
    </fieldset>
    <:-.end if:>
    <:-.if typename =~ /(Product|Seminar)/:>
    <fieldset>
      <legend>Pricing</legend>
      <:.call "inlinefield", "name":"retailPrice", "field": { "description":"Retail " _ cfg.entry("shop", "currency", "$"), "type":"money", "maxlength":11 }, "options": { "placeholder":"0.00", "disabled":is_disabled("retailPrice") } :>
      <:-.if cfg.entry("products", "legacy_gst"):>
      <:.call "inlinefield", "name":"gst", "field": { "description":"GST " _ cfg.entry("shop", "currency", "$"), "type":"money", "maxlength":11 }, "options": { "placeholder":"0.00", "disabled":is_disabled("gst") } :>
      <:-.end if:>
      <:-.if cfg.entry("products", "legacy_wholesale"):>
      <:.call "inlinefield", "name":"wholesalePrice", "field": { "description":"Wholesale " _ cfg.entry("shop", "currency", "$"), "type":"money", "maxlength":11 }, "options": { "placeholder":"0.00", "disabled":is_disabled("wholesalePrice") } :>
      <:-.end if:>
      <:-.set price_tiers = [ bse.products.pricing_tiers ]:>
      <:-.if price_tiers.size:>
      <input type="hidden" name="save_pricing_tiers" value="1" />
      <:-.set tier_prices = [ article.prices ].maphash("tier_id", "retailPrice") :>
      <:-.for price_tier in price_tiers:>
      <:.call "inlinefield", "name":"tier_price_" _ price_tier.id, "field": { "description":price_tier.description _ " " _ cfg.entry("shop", "currency", "$"), "type":"money", "maxlength":11 }, "options": { "default":tier_prices[price_tier.id] ? tier_prices[price_tier.id] : '', "placeholder":"0.00", "disabled":is_disabled("price_tier_" _ price_tier.id) } :>
      <:-.end for:>
      <:-.end if:>
    </fieldset>
    <:-.end if:>
    <details>
      <summary>More attributes</summary>
      <:- include admin/include/article_cfg_custom.tmpl:>
      <:-.if typename eq "Product":>
      <fieldset>
        <legend>Stock</legend>
        <:.call "inlinefield", "name":"product_code", "field": { "description":"Product code", "maxlength":80 }, "options": { "disabled":is_disabled("product_code") } :>
        <:.call "inlinefield", "name":"leadTime", "field": { "description":"Lead time", "maxlength":80 }, "options": { "placeholder":"days", "disabled":is_disabled("leadTime") } :>
      </fieldset>
      <fieldset>
        <legend>Measurements</legend>
        <:.call "inlinefield", "name":"weight", "field": { "description":"Weight", "maxlength":11 }, "options": { "default":empty_if_zero("weight"), "placeholder":"grams", "disabled":is_disabled("weight") } :>
        <:.call "inlinefield", "name":"length", "field": { "description":"Length", "maxlength":11 }, "options": { "default":empty_if_zero("length"), "placeholder":"millimetres", "disabled":is_disabled("length") } :>
        <:.call "inlinefield", "name":"width", "field": { "description":"Width", "maxlength":11 }, "options": { "default":empty_if_zero("width"), "placeholder":"millimetres", "disabled":is_disabled("width") } :>
        <:.call "inlinefield", "name":"height", "field": { "description":"Height", "maxlength":11 }, "options": { "default":empty_if_zero("height"), "placeholder":"millimetres", "disabled":is_disabled("height") } :>
      </fieldset>
      <:-.set dboptions =  is_new ? [] : [ product.db_options ] :>
      <:-.if dboptions.size :>
      <fieldset>
        <legend>Options</legend>
        <ul class="full list">
          <:-.for dboption in dboptions:>
          <li>
            <label><span class="indicator <:= dboption.enabled ? 'green' : 'gray':>"></span> <:= dboption.name:></label>
            <span class="field-input">
              <:-.if request.user_can("bse_edit_prodopt_edit", article ):>
              <a id="editoption<:= dboption.id:>" href="<:= cfg.admin_url2("add", "edit_option", { "id":article_id, "option_id":dboption.id }):>" class="button white small">Edit</a>
              <:-.else:>
              <a class="button white small disabled">Edit</a>
              <:-.end if:>
              <:-.if request.user_can("bse_edit_prodopt_delete", article ):>
              <a href="<:= cfg.admin_url2("add", "delete_option", { "id":article_id, "option_id":dboption.id, "_csrfp":request.get_csrf_token("admin_delete_option"), "r":refresh }):>" data-action="Delete" data-object="Option" class="button red small">Delete</a>
              <:-.else:>
              <a class="button red small disabled">Delete</a>
              <:-.end if:>
              <:.call "move_option", "admin":1, "r":refresh :>
            </span>
          </li>
          <:-.end for:>
        </ul>
      </fieldset>
      <:-.end if:>
      <:-.if cfg.entries("shop", "product options"):>
      <fieldset>
        <legend>Global Options</legend>
        <div class="field">
          <label class="field-label" for="options">Options <:.call "error_img_n", "name":"options":></label>
          <span class="field-input">
            <:.call "input", "name":"options", "field": { "maxlength":255 }, "options": { "placeholder":"comma separated", "disabled":is_disabled("options") } :>
            <:help edit options:>
          </span>
        </div>
        <div class="field">
          <label class="field-label" for="cfg_opts">Available</label>
          <span class="field-input">
            <:alloptions:>
          </span>
        </div>
      </fieldset>
      <:-.end if:>
      <:-.end if:>
      <fieldset>
        <legend>Structure</legend>
        <:-.set parents = [ self.possible_parents(article, "BSE::TB::Articles", request) ]:>
        <:-.set parent_ids = parents[0]:>
        <:-.set parent_labels = parents[1]:>
        <:-.set parent_list = parent_ids.map(@{id: { id: id, desc: parent_labels[id] }}):>
        <:-.call "inlinefield", "name":"parentid", "field": { "description":"Parent", "htmltype":"select", "select": { "values":parent_list, "id":"id", "label":"desc" } }, "options": { "disabled":is_disabled("parentid") } :>
        <:-.set menus_cfg_section = "level" _ article.level _ " menus":>
        <:-.if cfg.entries(menus_cfg_section):>
        <:-.set menu_list = [ cfg.orderCS(menus_cfg_section) ].map(@{k: { id: k, desc: cfg.entry(menus_cfg_section, k ) }}) :>
        <:-.call "inlinefield", "name":"menu", "field": { "description":"Menu", "htmltype":"select", "select": { "values":menu_list, "id":"id", "label":"desc" } }, "options": { "disabled":is_disabled("menu") } :>
        <:-.end if:>
      </fieldset>
      <fieldset>
        <legend>Categorisation</legend>
        <:-.set categories = [ bse.articles.categories ]:>
        <:-.call "inlinefield", "name":"category", "field": { "description":"Category", "htmltype":"select", "select": { "values":categories, "id":"id", "label":"name" } }, "options": { "disabled":is_disabled("category") } :>
        <input type="hidden" name="_save_tags" value="1" />
        <:-.set tags = cgi.param("_save_tags").defined ? [ cgi.param("tags") ] : [ "", article.tags ] :>
        <:-.for tag in tags :>
        <div class="field">
          <label class="field-label" for="tag_<:= loop.count :>"><:= loop.is_first ? "Tag name" : "" :> <:.call "error_img_n", "name":"tags", "index":loop.index :></label>
          <span class="field-input">
            <:.call "input", "name":"tags", "field": { "maxlength":80 }, "options": { "default":tag, "id":"tag_" _ loop.count, "disabled":is_disabled("tags") }, "index":loop.index :>
          </span>
          <span class="field-actions">
            <:-.if loop.is_first:>
            <button class="button white small" onclick="plus(this); return false;" data-icon="add" data-icon-only="true">Add</button>
            <button class="button white small" onclick="minus(this); return false;" disabled="disabled" data-icon="subtract" data-icon-only="true">Delete</button>
            <:-.end if:>
          </span>
        </div>
        <:-.end for:>
      </fieldset>
      <fieldset>
        <legend>Presentation</legend>
        <:-.set template_list = [ self.templates_long(article) ]:>
        <:-.call "inlinefield", "name":"template", "field": { "description":"Templates", "htmltype":"select", "select": { "values":template_list, "id":"name", "label":"description" } }, "options": { "disabled":is_disabled("template") } :>
        <:.call "inlinefield",
            "name":"force_dynamic",
            "field":{
                "description":"Page display",
                "htmltype":"select",
                "select":{
                    "values":[
                        { "id":"0", "desc":( article.cached_dynamic and article.force_dynamic == 0 ? "Dynamic (Inherited)" : "Static" ) },
                        { "id":"1", "desc":"Dynamic" }
                    ],
                    "id":"id",
                    "label":"desc"
        		}
            },
        	"options":{ "disabled":is_disabled("force_dynamic") }
        -:>
        <:.call "inlinefield", "name":"summaryLength", "field": { "description":"Summary length", "maxlength":5 }, "options": { "placeholder":"characters", "disabled":is_disabled("summaryLength") } :>
        <:.call "inlinefield", "name":"threshold", "field": { "description":"Embed threshold", "maxlength":10 }, "options": { "placeholder":"children", "disabled":is_disabled("threshold") } :>
      </fieldset>
      <fieldset>
        <legend>Publication</legend>
        <:.call "inlinefield",
            "name":"listed",
            "field":{
                "description":"List article",
                "htmltype":"select",
                "select":{
                    "values":[
                        { "id":"1", "desc":"Yes" },
                        { "id":"0", "desc":"No" },
                        { "id":"2", "desc":"In Sections, but not menus" }
                    ],
                    "id":"id",
                    "label":"desc"
        		}
            },
        	"options":{ "disabled":is_disabled("listed") }
        -:>
        <:.call "inlinefield", "name":"release", "field": { "description":"Release date", "type":"date", "maxlength":10 }, "options": { "placeholder":"DD/MM/YYYY", "disabled":is_disabled("release") } :>
        <:.call "inlinefield", "name":"expire", "field": { "description":"Expiry date", "type":"date", "maxlength":10 }, "options": { "placeholder":"DD/MM/YYYY", "disabled":is_disabled("expire") } :>
      </fieldset>
      <:-.set groups = [ self.iter_groups ]:>
      <:-.set group_ids = is_new ? [] : [ article.group_ids ] :>
      <:-#= "OLD DEFAULT: " _ bse.dumper(group_ids) |raw:>
      <:-.set group_defaults = cgi.param("group_id").defined ? [ cgi.param("group_id") ] : group_ids :>
      <:-.set group_defaults = group_defaults:>
      <:-#= "NEW DEFAULT: " _ bse.dumper(group_defaults) |raw:>
      <:-#= "VALUES: " _ bse.dumper(groups) |raw:>
      <:-.if groups.size:>
      <fieldset>
        <legend>Access <:.call "error_img_n", "name":"group_id":></legend>
        <ul>
          <:-.for group in groups:>
          <:-.set group_checked = group_defaults.maphash[group.id] ? 1 : 0 :>
          <:-#= "CHECKED: " _ group_checked:>
          <li>
            <:.call "input", "name":"group_id", "field": { "value":group.id, "save_name":"save_group_id", "save_value":group.id, "htmltype":"checkbox" }, "options": { "default":group_checked, "id":"group_id_" _ group.id, "disabled":is_disabled("group_id") }, "index":loop.index :>
            <label for="group_id_<:= group.id:>">
              <:-.if group.id =~ /^-/ -:>
                <:= group.name:>
              <:-.else -:>
                <:-.if request.user_can("bse_members_group_edit") -:>
                <a href="<:= cfg.admin_url2("siteusers", "groupmemberform", { "id": group.id, "referer":1 }):>"><:= group.name:></a>
                <:-.else -:>
                <:= group.name:>
                <:-.end if -:>
              <:-.end if -:>
            </label>
          </li>
          <:-.end for:>
        </ul>
        <!--
        <:#.call "make_multicheck", "name":"group_id", "values":groups, "id":"id", "desc":"name", "default":group_ids, "save_name":"save_group_id", "options":{ "disabled":is_disabled("group_id") } :>
        -->
      </fieldset>
      <:-.end if:>
      <fieldset>
        <legend>Flags <:.call "error_img_n", "name":"flags":></legend>
        <:-.set flags_list = [ self.flags ]:>
        <:-.set article_flags = article.flags ? article.flags.split(undef, article.flags) : [] :>
        <!--
        ARTICLE FLAGS: <:#= bse.dumper(article_flags) |raw:>
        <:-.set flags_default = cgi.param("flags").defined ? [ cgi.param("flags") ] : article_flags :>
        DEAFULT FLAGS: <:#= bse.dumper(flags_default) |raw:>
        -->
        <!--
        <:#.call "make_multicheck", "name":"flags", "values":flags_list, "id":"id", "desc":"desc", "default":article_flags, "save_name":"none", "options":{ "disabled":is_disabled("flags") } :>
        -->
        <:.call "input", "name":"flags", "field":{ "htmltype":"multicheck", "select":{ "values":flags_list, "label":"desc", "id":"id" }, "save_name":"none" }, "options":{ "default":article_flags, "disabled":is_disabled("flags") } :>
      </fieldset>
      <fieldset>
        <legend>Metadata</legend>
        <:.call "inlinefield", "name":"pageTitle", "field": { "description":"Page title", "maxlength":255 }, "options": { "disabled":is_disabled("pageTitle") } :>
        <:.call "inlinefield", "name":"metaDescription", "field": { "description":"Meta description", "maxlength":255 }, "options": { "disabled":is_disabled("metaDescription") } :>
        <:.call "inlinefield", "name":"metaKeywords", "field": { "description":"Meta keywords", "maxlength":255 }, "options": { "disabled":is_disabled("metaKeywords") } :>
        <:.call "inlinefield", "name":"author", "field": { "description":"Author name", "maxlength":255 }, "options": { "disabled":is_disabled("author") } :>
        <:.call "inlinefield", "name":"keyword", "field": { "description":"Local keywords", "maxlength":255 }, "options": { "placeholder":"comma separated", "disabled":is_disabled("keyword") } :>
        <:.call "edit_metadata" :>
      </fieldset>
      <:-.if typename eq "Article":><:include admin/include/article_custom.tmpl optional:>
      <:-.elsif typename eq "Catalog":><:include admin/include/catalog_custom.tmpl optional:>
      <:-.elsif typename eq "Seminar":><:include admin/include/seminar_custom.tmpl optional:>
      <:-.elsif typename eq "Product":><:include admin/include/product_custom.tmpl optional:>
      <:-.end if:>
      <:-.if typename eq "Product" or typename eq "Seminar":>
      <:-.set subscriptions = [ [ "subscription_id", "-1", "title", "(none)" ].as_hash, [ self.iter_subs ] ].expand:>
      <:-.if subscriptions.size:>
      <fieldset>
        <legend>Subscription</legend>
        <:-.call "inlinefield", "name":"subscription_id", "field": { "description":"Subscription", "htmltype":"select", "select": { "values":subscriptions, "id":"subscription_id", "label":"title" } }, "options": { "disabled":is_disabled("subscription_id"), "onchange":"if (this.value != '-1') { this.form.subscription_usage.disabled = false, this.form.subscription_period.disabled = false } else { this.form.subscription_usage.disabled = true, this.form.subscription_period.disabled = true };" } :>
        <:.call "inlinefield", "name":"subscription_period", "field": { "description":"Duration", "maxlength":11 }, "options": { "placeholder":"months", "disabled":is_disabled("subscription_period") } :>
        <:.call "inlinefield",
            "name":"subscription_usage",
            "field":{
                "description":"Usage",
                "htmltype":"select",
                "default":article.subscription_usage,
                "select":{
                    "values":[
                        { "id":"3", "desc":"Start or renew a subscription" },
                        { "id":"1", "desc":"Start a subscription only" },
                        { "id":"2", "desc":"Renew a subscription only" }
                    ],
                    "id":"id",
                    "label":"desc"
        		  }
            },
        	"options":{ "disabled":is_disabled("subscription_usage") }
        -:>
        <:-.set subscriptions = [ [ "subscription_id", "-1", "title", "(nothing)" ].as_hash, [ self.iter_subs ] ].expand:>
        <:-.call "inlinefield", "name":"subscription_required", "field": { "description":"Requires", "htmltype":"select", "select": { "values":subscriptions, "id":"subscription_id", "label":"title" } }, "options": { "disabled":is_disabled("subscription_required") } :>
      </fieldset>
      <script type="text/javascript">
          var form = document.forms[0];
              
          if (form.subscription_id.value != '-1') {
              form.subscription_usage.disabled = false,
              form.subscription_period.disabled = false
          } else {
              form.subscription_usage.disabled = true,
              form.subscription_period.disabled = true
          };
      </script>
      <:-.end if:>
      <:-.end if:>
      <:-.if cfg.entry("articles", "legacy_thumbimage"):>
      <fieldset>
        <legend>Thumbnail</legend>
        <:.call "inlinefield", "name":"thumbnail", "field": { "name":"thumbImage", "description":(article.thumbImage ? "Change image" : "Image"), "htmltype":"file" }, "options": { "disabled":is_disabled("thumbnail") } :>
        <:-.if article.thumbImage:>
        <div class="field">
          <label class="field-label">Original</label>
          <span class="field-input">
            <img src="<:= cfg.entry("uri", "images") _ "/" _ article.thumbImage:>" width="<:= article.thumbWidth:>" height="<:= article.thumbHeight:>" style="max-width: 100%; height: auto;" />
          </span>
          <span>
            <:-.if request.user_can("edit_field_edit_thumbnail", article ):>
            <:-.if typename =~ /(Product|Seminar)/:>
            <a href="<:= cfg.admin_url("add", { "id":article.id, "remove_thumb":1, "save":1, "lastModified":article.lastModified, "flags":article.flags, "_csrfp":request.get_csrf_token("admin_save_article"), "retailPrice":bse.number("money", article.retailPrice), "wholesalePrice":bse.number("money", article.wholesalePrice), "gst":bse.number("money", article.gst) }):>" data-action="Delete" data-object="Thumbnail" class="button red small">Delete</a>

            <:-.else:>
            <a href="<:= cfg.admin_url("add", { "id":article.id, "remove_thumb":1, "save":1, "lastModified":article.lastModified, "flags":article.flags, "_csrfp":request.get_csrf_token("admin_save_article") }):>" data-action="Delete" data-object="Thumbnail" class="button red small">Delete</a>
            <:-.end if:>

            <:-.else:>
            <a class="button red small disabled">Delete</a>
            <:-.end if:>
          </span>
        </div>
        <div class="field">
          <label class="field-label">Size</label>
          <span class="field-input">
            <:= article.thumbWidth:> &times; <:= article.thumbHeight:> px
          </span>
        </div>
        <:-.end if:>
      </fieldset>
      <:-.end if:>
      <:-.set images = [ article.images ]:>
      <:-.if images.size:>
      <fieldset>
        <legend>Images</legend>
        <ul class="full list">
          <:-.for image in images:>
          <li>
            <a href="<:= image.src:>" onclick="window.open(this.href, 'fullimage', 'width=<:= 40 + image.width:>,height=<:= 90 + image.height:>,location=no,status=no,menubar=no,scrollbars=yes'); return false;"><:= image.thumb("geo","editor", "nolink", 1 ) |raw:></a> <:.if image.name:>(<:= image.name:>)<:.end if:>
            <span>
              <:-.if request.user_can("bse_edit_images_save", article ):>
              <a href="<:= cfg.admin_url2("add", "edit_image", { "id":article.id, "image_id":image.id }):>" class="button white small">Edit</a>
              <:-.else:><a class="button white small disabled">Edit</a>
              <:-.end if:>
              <:-.if request.user_can("bse_edit_images_delete", article ):>
              <a href="<:= cfg.admin_url("add", { "removeimg_" _ image.id:1, "id":article.id, "_csrfp":request.get_csrf_token("admin_remove_image") }):>" data-action="Delete" data-object="Image" class="button red small">Delete</a>
              <:-.else:><a class="button red small disabled">Delete</a>
              <:-.end if:>
              <:.call "move_image", "admin":1, "r":refresh :>
            </span>
          </li>
          <:-.end for:>
        </ul>
      </fieldset>
      <:-.end if:>
      <:-.set files = [ article.files ]:>
      <:-.if files.size:>
      <fieldset>
        <legend>Files</legend>
        <ul class="full list">
          <:-.for file in files:>
          <li>
            <a href="<:= cfg.user_url("user", "download_file", "file", file.id ):>"><span class="indicator <:= file.hide_from_list ? "orange" : file.file_exists ? "green" : "red":>"></span> <:= file.displayName:></a><:.if file.name:> (<:= file.name:>)<:.end if:>
            <span>
              <:-.if request.user_can("bse_edit_files_save", article ):>
              <a href="<:= cfg.admin_url2("add", "edit_file", { "id":article.id, "file_id":file.id }):>" class="button white small">Edit</a>
              <:-.else:>
              <a class="button white small disabled">Edit</a>
              <:-.end if:>
              <:-.if request.user_can("bse_edit_files_delete", article ):>
              <a href="<:= cfg.admin_url2("add", "filedel", { "id":article.id, "file":file.id, "_csrfp":request.get_csrf_token("admin_remove_file") }):>" data-action="Delete" data-object="File" class="button red small">Delete</a>
              <:-.else:>
              <a class="button red small disabled">Delete</a>
              <:-.end if:>
              <:.call "move_file", "admin":1, "r":refresh :>
            </span>
          </li>
          <:-.end for:>
        </ul>
      </fieldset>
      <:-.end if:>
    </details>
    <:-.if is_new:>
    <p class="buttons">
      <a href="<:= done_url:>" accesskey="." title="AccessKey = ." data-action="Cancel" class="button white">Cancel</a>
      <:-.if request.user_can("bse_edit_save", article.parentid ):>
      <input type="submit" name="save" value="Create <:= typename:>" accesskey="c" title="AccessKey = c" class="button green" />
      <:-.end if:>
    </p>
    <:-.else:>
    <p class="buttons">
      <a href="<:= done_url:>" accesskey="." title="AccessKey = ." class="button white">Done</a>
      <:-.if request.user_can("bse_edit_save", article ):>      
      <input type="submit" name="save" value="Save Changes" accesskey="s" title="AccessKey = s" class="button green" />
      <:-.end if:>
    </p>
    <:-.end if:>
  </form>
</div>
<script type="text/javascript">
    function plus(ele) {
        var ele = $(ele).up('div');
        var clone = ele.clone(true);
        clone.down('input[name="tags"]').clear().removeAttribute("class");
        clone.down('label').update(' ');
        var disabled = clone.down('button[disabled]');
        if (disabled) {
            disabled.removeAttribute('disabled');
        }
        ele.insert({after: clone});
        update();
    };

    function minus(ele) {
        var ele = $(ele).up('div').remove();
        update();
    };
    
    function update() {
        changesMonitor.initialize();
    };

</script>
