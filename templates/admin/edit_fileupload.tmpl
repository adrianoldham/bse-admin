<:-.set is_article = article.id > 0 -:>
<:-.set typename = is_article ? "" : "Site" -:>
<:-.wrap "admin/base.tmpl", "title": "New " _ typename _ " File" :>
<div class="window dialog">
  <header>
    <:-.set pagetitle = params.title _ ( is_article ? " - " _ ( article.titleAlias or article.title ) _ " (Level " _ article.level _ ")" : "" ) :>
    <h1><:= pagetitle:></h1>
  </header>
  <form action="<:script:>" method="post" enctype="multipart/form-data" data-object="File">
    <input type="hidden" name="id" value="<:article id:>" />
    <input type="hidden" name="_t" value="fileupload" />
    <:csrfp admin_add_file hidden:>
    <:csrfp admin_save_file hidden:>
    <input type="hidden" name="r" value="<:switch:><:case Cgi r:><:cgi r:><:case And [cgi referer] [referer]:><:replace [referer] "&amp;referer=[0-9]+":><:case default:><:script:>?id=<:article id:><:endswitch:>" />
    <fieldset>
      <legend>Resource</legend>
      <div>
        <label for="file">File <span class="required">*</span> <:error_img file:></label>
        <span>
          <input type="file" name="file" id="file" accesskey="f" title="AccessKey = f" required="required" autofocus="autofocus" class="<:ifError_img file:>error<:eif:>" />
          <:help file file:>
        </span>
      </div>
      <div>
        <label for="name">Name <:error_img name:></label>
        <span>
          <input type="text" name="name" id="name" value="<:old name:>" class="<:ifError_img name:>error<:eif:>" />
          <:help file name:>
        </span>
      </div>
    </fieldset>
    <details>
      <summary>More attributes</summary>
      <fieldset>
        <legend>Content</legend>
        <div>
          <label for="description">Description <:error_img description:></label>
          <span>
            <input type="text" name="description" id="description" value="<:old description:>" class="<:ifError_img description:>error<:eif:>" />
            <:help file description:>
          </span>
        </div>
        <div>
          <label for="notes">Notes <:error_img notes:></label>
          <span>
            <textarea name="notes" id="notes" class="<:ifError_img notes:>error<:eif:>"><:old notes:></textarea>
            <:help file notes:>
          </span>
        </div>
      </fieldset>
      <fieldset>
        <legend>Properties</legend>
        <div>
          <label for="contentType">Content type <:error_img contentType:></label>
          <span>
            <input type="text" name="contentType" id="contentType" value="<:old contentType:>" placeholder="MIME format" class="<:ifError_img contentType:>error<:eif:>" />
            <:help file contentType:>
          </span>
        </div>
        <div>
          <label for="download">Force download <:error_img download:></label>
          <span>
            <input type="checkbox" name="download" id="download" value="1" <:ifOld download:>checked="checked" <:eif:>/>
            <:help file download:>
          </span>
        </div>
        <div>
          <label for="hide_from_list">Hide from list <:error_img hide_from_list:></label>
          <span>
            <input type="checkbox" name="hide_from_list" id="hide_from_list" value="1" <:ifOld hide_from_list:>checked="checked" <:eif:>/>
            <:help file hide_from_list:>
          </span>
        </div>
        <:- if Match [article generator] "Product":>
        <div>
          <label for="forSale">Require payment <:error_img forSale:></label>
          <span>
            <input type="checkbox" name="forSale" id="forSale" value="1" <:ifOld forSale:>checked="checked" <:eif:>/>
            <:help file forSale:>
          </span>
        </div>
        <:- eif Match:>
        <div>
          <label for="requireUser">Require login <:error_img requireUser:></label>
          <span>
            <input type="checkbox" name="requireUser" id="requireUser" value="1" <:ifOld requireUser:>checked="checked" <:eif:>/>
            <:help file requireUser:>
          </span>
        </div>
        <div>
          <label for="storage">Storage <:error_img storage:></label>
          <span>
            <select name="storage" id="storage">
              <option value="">(Auto)</option>
              <:- iterator begin file_stores:>
              <option value="<:file_store name:>" <:ifOld storage:>selected="selected"<:eif:>><:file_store description:></option>
              <:- iterator end file_stores:>
            </select>
            <:help file storage:>
          </span>
        </div>
      </fieldset>
    </details>
    <div>
      <div id="drop-target" data-drop="target" style="display: none;">
        <h2>Quick File Upload</h2>
        Drag and drop files here
      </div>
      <ul id="drop-list" data-drop="list" class="full list inset" style="display: none;"></ul>
    </div>
    <script type="text/javascript">
    if (window.FormData) {
        document.observe("dom:loaded", function() {
        
            var pendingClass = "debug";
            var activeClass = "info";
            var completedClass = "notice";
            var errorClass = "error";
            var dragClass = "notice over";
            
            var dropTarget = $("drop-target");
            var dropList = $("drop-list");
            var dropDone = $$("[data-action=Cancel]")[0];
        
            var activeFiles = [];
            var transferActive = false;

            dropTarget.show();
    
            function startTransfer() {
                var file = activeFiles.shift();
                file.element.removeClassName(pendingClass); // pending
                file.element.addClassName(activeClass); // active
                var fd = new FormData();
                fd.append("file", file.file, file.name);
                fd.append("id", "<:= article.id:>");
                fd.append("fileadd", "1");
                var r = new XMLHttpRequest();
                r.open("POST", "<:= cfg.admin_url("add"):>", true);
                try {
                    r.responseType = "json";
                } catch (e) {} // ignore failure, like on Safari
                r.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                r.upload.addEventListener("progress", function(e) {
                    // update progress bar
                    file.pb.show();
                    file.pb.update(Math.round(100 * e.loaded / e.total));
                    file.pb.max = e.total;
                    file.pb.value = e.loaded;
                });
                r.addEventListener("load", function(e) {
                    var r = e.target;
                    file.element.removeClassName(activeClass); // inactive
                    file.pb.hide();
                    transferActive = false;
                    if (r.status == 200) {
                        var resp = r.response;
                        if (r.responseType != "json") {
                            // IE/Safari doesn't support it
                            resp = JSON.parse(r.responseText);
                        }
                        if (resp.success != 0) {
                            file.element.update(file.file.name);
                            file.element.addClassName(completedClass); // complete
                        } else {
                            var error = "unknown";
                            if (resp.message) {
                                error = resp.message;
                            } else if (resp.errors && resp.errors.file) {
                                error = resp.errors.file;
                            } else if (resp.error_code) {
                                error = resp.error_code;
                            }
    
                            file.element.update(file.file.name + ": " + error);
                            file.element.addClassName(errorClass);
                        }
                    } else {
                        file.element.addClassName(errorClass);
                        file.element.update(file.file.name + ": " + r.status + " " + r.statusText);
                    }
                    if (activeFiles.length != 0) {
                        startTransfer();
                    }
                });
                r.addEventListener(errorClass, function(e) {
                    var r = e.target;
                    transferActive = false;
                    file.element.removeClassName(activeClass); // inactive
                    file.element.addClassName(errorClass);
                    file.element.update(file.file.name + ": " + r.status + " " + r.statusText);
                    if (activeFiles.length != 0) {
                        startTransfer();
                    }
                });
                transferActive = true;
                r.send(fd);
            }
    
            dropTarget.addEventListener("dragenter", function(e) {
                e.stopPropagation();
                e.preventDefault();
            }, false);
            dropTarget.addEventListener("dragleave", function(e) {
                this.removeClassName(dragClass);
                e.stopPropagation();
                e.preventDefault();
            }, false);
            dropTarget.addEventListener("dragover", function(e) {
                this.addClassName(dragClass);
                e.stopPropagation();
                e.preventDefault();
            }, false);
            dropTarget.addEventListener("drop", function(e) {
                this.removeClassName(dragClass);
                e.stopPropagation();
                e.preventDefault();
    
                var f = e.dataTransfer.files;
                dropList.show();
                for (var i = 0; i < f.length; ++i) {
                    var file = f[i];
                    var fe = new Element("li", {
                        className: pendingClass // pending
                    });
                    var pb = new Element("progress");
                    fe.update(file.name);
                    fe.appendChild(pb);
                    dropList.appendChild(fe);
                    activeFiles.push({
                        file: file,
                        element: fe,
                        pb: pb
                    });
                }
                dropDone.update("Done");
                if (!transferActive) {
                    startTransfer();
                }
            }, false);
        });
    }
    </script>
    <p class="buttons">
      <a href="<:switch:><:case Cgi r:><:cgi r:><:case And [cgi referer] [referer]:><:replace [referer] "&amp;referer=[0-9]+":><:case default:><:script:>?id=<:article id:><:endswitch:>" accesskey="." title="AccessKey = ." data-action="Cancel" class="button white">Cancel</a>
      <:- if UserCan bse_edit_files_add:article:>
      <input type="submit" name="fileadd" value="Upload File" accesskey="u" title="AccessKey = u" class="button green" />
      <:- eif UserCan:>
    </p>
  </form>
</div>