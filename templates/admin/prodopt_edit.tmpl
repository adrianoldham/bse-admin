<:-.wrap "admin/base.tmpl", "title": "Edit Option" :>

<:-.set referer = request.referer -:>
<:-.set cgi_referer = cgi.param("referer") -:>

<:-.if referer =~ cfg.admin_url("admin") -:>
<:-.set done_url = cfg.admin_url("add", { "id": ( cgi_referer ? cgi_referer : article.id ), "preview": 1 }) -:>

<:-.elsif cgi_referer and referer and referer !~ /logon/ -:>
<:-.set done_url = referer.replace(/(&amp;|&|\?)referer=[\d]+/, "").replace(/\.pl&(mp;)?/, ".pl?") -:>

<:-.else -:>
<:-.set done_url = cfg.admin_url("add", { "id": article.id }) -:>

<:-.end if -:>

<div class="window dialog">
  <header>
    <:-.set pagetitle = params.title _ " - " _ ( article.titleAlias or article.title ) _ " (Level " _ article.level _ ")" :>
    <h1><:= pagetitle:></h1>
    <nav data-role="toolbar">
      <a href="<:adminurl add:>?id=<:article id:>" data-icon="back" data-icon-only="true" class="button">Back</a>
      <:- if UserCan bse_edit_prodopt_delete:article:>
      <a href="<:script:>?id=<:article id:>&amp;a_delete_option=1&amp;option_id=<:option id:>&amp;_csrfp=<:csrfp admin_delete_option:>" data-action="Delete" data-object="Option" data-icon="trash" class="button">Delete</a>
      <:- or UserCan:>
      <a data-icon="trash" class="button disabled">Delete</a>
      <:- eif UserCan:>
    </nav>
  </header>
  <form action="<:script:>" method="post" data-object="Option">
    <input type="hidden" name="id" value="<:article id:>" />
    <input type="hidden" name="option_id" value="<:option id:>" />
    <input type="hidden" name="newvaluecount" id="newvaluecount" value="<:ifCgi newvaluecount:><:cgi newvaluecount:><:or:>0<:eif:>" />
    <input type="hidden" name="r" value="<:cgi r:>" />
    <:csrfp admin_save_option hidden:>
    <fieldset>
      <legend>Option</legend>
      <div class="field">
        <label class="field-label" for="name">Name <span class="required">*</span> <:error_img name:></label>
        <span class="field-input">
          <input type="text" name="name" id="name" value="<:old name option name:>" required="required" class="<:ifError_img name:>error<:eif:>" />
          <:help edit name:>
        </span>
      </div>
      <div class="field">
        <label class="field-label" for="enabled">Enabled <:error_img enabled:></label>
        <span class="field-input">
          <input type="checkbox" name="enabled" id="enabled" value="1" <:ifOr [old enabled] [option enabled]:>checked="checked" <:eif:>/>
          <input type="hidden" name="save_enabled" value="1" />
          <:help edit enabled:>
        </span>
      </div>
      <!--<div class="field">
        <label class="field-label" for="type">HTML Type <:error_img type:></label>
        <span class="field-input">
          <select name="type" id="type">
            <option value="select"<:ifOr [ifMatch [old type] "select"] [ifMatch [option type] "select"]:> selected="selected"<:eif:>>Select Popup</option>
            <option value="radio"<:ifOr [ifMatch [old type] "radio"] [ifMatch [option type] "radio"]:> selected="selected"<:eif:>>Radio Buttons</option>
          </select>
          <:help edit type:>
        </span>
      </div>-->
    </fieldset>
    <fieldset id="option_values">
      <legend>Values <:error_img default_value:></legend>
      <:- iterator begin dboptionvalues:>
      <div class="field">
        <label class="field-label" for="value<:dboptionvalue id:>">
          <!--:dboptionvalue_move:-->
          <:-.set option_id = "option id".evaltag -:>
          <:-.set dboptionvalue_id = "dboptionvalue id".evaltag -:>
          <:-.set refresh = cfg.admin_url2("add", "edit_option", { "id":article.id, "option_id": option_id }) -:>

          <:-.if request.user_can("bse_edit_prodopt_edit", product) :>
          <:-.set loop_next = "arithmetic [dboptionvalue_count] > [dboptionvalue_index] + 1".evaltag -:>
          <:-.set loop_prev = "dboptionvalue_index".evaltag -:>

          <:-.set down_url = loop_next ? cfg.admin_url2("add", "option_value_movedown", { "id":article.id, "value_id":dboptionvalue_id, "_csrfp":request.get_csrf_token("admin_move_option_value"), "r":refresh }) : 0 -:>
          <:-.set up_url = loop_prev ? cfg.admin_url2("add", "option_value_moveup", { "id":article.id, "value_id":dboptionvalue_id, "_csrfp":request.get_csrf_token("admin_move_option_value"), "r":refresh }) : 0 -:>
          
          <:.call "make_arrows", "down_url":down_url, "up_url":up_url :>
          <:-.end if :>
          <input type="radio" name="default_value" value="<:dboptionvalue id:>" <:ifOr [ifEq [dboptionvalue id] [cgi default_value]] [ifEq [dboptionvalue id] [option default_value]]:>checked="checked"<:eif:> />
          #<:dboptionvalue_number:> <span class="required">*</span> <:error_img [cat value [dboptionvalue id]]:>
        </label>
        <span class="field-input">
          <input type="text" name="value<:dboptionvalue id:>" id="value<:dboptionvalue id:>" value="<:oldi [cat value [dboptionvalue id]] 0 dboptionvalue value:>" required="required" class="<:ifError_img [cat value [dboptionvalue id]]:>error<:eif:>" />
          <:help edit name:>
        </span>
        <span class="field-actions">
          <:- if UserCan bse_edit_prodopt_edit:article:>
          <a href="<:= cfg.admin_url2("add", "delete_option_value", { "id":article.id, "value_id":dboptionvalue_id, "_csrfp":request.get_csrf_token("admin_delete_option_value"), "r":refresh }):>" data-action="Delete" data-object="Value" class="button red small">Delete</a>
          <:- eif UserCan:>
         </span>
      </div>
      <:- iterator end dboptionvalues:>
      <:- if Cgi newvaluecount:>
      <:- iterator begin repeats [cgi newvaluecount]:>
      <div class="field">
        <label class="field-label" for="newvalue<:repeat value:>">#<:add [dboptionvalue_count] [repeat value]:> <span class="required">*</span> <:error_img [cat newvalue [repeat value]]:></label>
        <span class="field-input">
          <input type="text" name="newvalue<:repeat value:>" value="<:= cgi.param("newvalue" _ "repeat value".evaltag ):>" required="required" class="<:ifError_img [cat newvalue [repeat value]]:>error<:eif:>" />
        </span>
        <span class="field-actions">
          <button class="button white small" data-icon="add" data-icon-only="true">Add</button>
          <button class="button white small" data-icon="subtract" data-icon-only="true">Delete</button>
        </span>
      </div>
      <:- iterator end repeats:>
      <:- eif Cgi:>
    </fieldset>
    <p class="buttons">
      <a href="<:= done_url:>" accesskey="." title="AccessKey = ." data-action="Cancel" class="button white">Cancel</a>
      <:- if UserCan bse_edit_prodopt_save:article:>
      <input type="submit" name="a_save_option" value="Save Changes" accesskey="s" title="AccessKey = s" class="button green" />
      <:- eif UserCan:>
    </p>
  </form>
</div>
<:- if UserCan bse_edit_prodopt_edit:article:>
<script type="text/javascript">
    var optionValues = $("option_values");
    var oldValueCount = $$("input[name^=value][type=text]").length;
    var newValueCount = $("newvaluecount").value;
    var maxValueCount = 9;
    var requiredIndicator = new Element("span", { "class":"required" }).update(" *");

    var addButton = new Element("button", {
        "class":"button white small",
        "data-icon":"add",
        "data-icon-only":"true"
     }).update("Add");

    var delButton = new Element("button", {
        "class":"button white small",
        "data-icon":"subtract",
        "data-icon-only":"true"
    }).update("Delete");

    var firstAddButton = addButton.clone(true).addClassName("right");
    
    // On page load append first add button if there are new values
    if (newValueCount == 0) {
        optionValues.appendChild(firstAddButton.observe("click", plus));
    }
    // Otherwise on page load attatch events to in page buttons    
    else {
        $$("[data-icon=add]").invoke("observe", "click", plus);
        $$("[data-icon=subtract]").invoke("observe", "click", minus);
    }

    update();

    function plus(e) {
        e.preventDefault();
        e.stopPropagation();
        // cache the current newValueCount for later
        var currentNewValueCount = newValueCount;
        ++newValueCount;

        // New value field
        var name = "newvalue" + newValueCount;

        var div = new Element("div", { "class":"field" });

        var label = new Element("label", { "for":name, "class":"field-label" }).update("#" + parseInt(oldValueCount + newValueCount));
        div.appendChild(label);

        label.appendChild(requiredIndicator.clone(true));
    
        var span = new Element("span", { "class":"field-input" });
        div.appendChild(span);
    
        var input = new Element("input", { "type":"text", "name":name, "id":name, "data-new":"true", "required":"required" });
        span.appendChild(input);

        var actions = new Element("span", { "class":"field-actions" });
        actions.appendChild(addButton.clone(true).observe("click", plus));
        // add a space so our buttons donâ€™t collide
        actions.appendChild(document.createTextNode(" "));
        actions.appendChild(delButton.clone(true).observe("click", minus));
        div.appendChild(actions);
    
        if (currentNewValueCount == 0) {
            optionValues.insertBefore(div, firstAddButton);
            firstAddButton.remove();
        }
        // prevent insertion of new fields maxValueCount is reached
        else if (currentNewValueCount < maxValueCount) {
            optionValues.insertBefore(div, this.up(".field").nextSibling);
            update();
        }
        
        //Reinitialise changesMonitor to include new inputs
        //Originally initialised in init.js

        changesMonitor.initialize();
    };

    function minus(e) {
        e.preventDefault();
        e.stopPropagation();
        --newValueCount;

        this.up(".field").remove();
        
        if (newValueCount == 0) {
            optionValues.appendChild(firstAddButton.observe("click", plus));
        }

        update();

        //Reinitialise changesMonitor to include new inputs
        //Originally initialised in init.js

        changesMonitor.initialize();
    };

    function update() {
        $("newvaluecount").value = newValueCount;
        
        var newValueInputs = $$("input[name^=newvalue][type=text][data-new]");
        
        for (var i = 0; i < newValueInputs.length; ++i) {
            var loop = parseInt(i + 1);
            var name = "newvalue" + loop;

            var input = newValueInputs[i];
            input.setAttribute("name", name);
            input.setAttribute("id", name);
            
            var label = input.up("div").down("label");
            label.update("#" + parseInt(oldValueCount + loop)).appendChild(requiredIndicator.clone(true));
            label.setAttribute("for", name);
        }
                
        // diasable all add buttons when maxValueCount is reached
        if (newValueCount == maxValueCount) {
            $$("[data-icon=add]").invoke("writeAttribute", "disabled", true);
        }        
        // enable all add buttons when leaving maxValueCount
        if (newValueCount < maxValueCount) {
            $$("[data-icon=add]").invoke("writeAttribute", "disabled", false);
        }
    };
</script>
<:- eif UserCan:>