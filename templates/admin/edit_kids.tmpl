<:-.set is_article = article.id and article.id > 0 -:>
<:-.set typename = is_article ? article.generator.replace(/^(?:BSE::)?Generate::(\w+)$/, "$1") : "Site" -:>
<:-.wrap "admin/base.tmpl", "title": ( "Manage " _ typename _ " Children" ) :>
<:-.set kids = [ article.allkids ] :>

<:-.set referer = request.referer -:>
<:-.set cgi_referer = cgi.param("referer") -:>

<:-.if referer =~ cfg.admin_url("admin") -:>
<:-.set done_url = cfg.admin_url("add", { "id": ( cgi_referer ? cgi_referer : article.id ), "preview": 1 }) -:>

<:-.elsif cgi_referer and referer and referer !~ /logon/ -:>
<:-.set done_url = referer.replace(/(&amp;|\?)referer=[\d]+/, "") -:>

<:-.else -:>
<:-.set done_url = cfg.admin_url("add", { "id": article.id }) -:>

<:-.end if -:>

<div class="window">
  <header>
    <:-.set pagetitle = params.title _ " - " _ ( article.titleAlias or article.title ) _ " (Level " _ article.level _ ")" :>
    <ul class="menu header">
      <li>
        <h1><a href="#"><:= pagetitle:></a></h1>
        <ul>
          <li class="disabled"><span><:= article.titleAlias or article.title:> (Level <:= article.level:>)</span></li>
          <li class="divider"></li>
          <:-.set crumbs = [ article.ancestors ] -:>
          <:-.for crumb in crumbs:>
          <li><a href="<:= cfg.admin_url("add", { "id": crumb.id, "referer": 1 }) :>"><:= crumb.titleAlias or crumb.title:> (Level <:= crumb.level:>)</a></li>
          <:-.end for:>
          <li class="divider"></li>
          <li><a href="<:= cfg.admin_url("add", { "id": -1 }) :>" accesskey="h" title="AccessKey = h">Manage Site Articles</a></li>
        </ul>
      </li>
    </ul>
    <a href="<:= cfg.admin_url("menu"):>" accesskey="m" title="AccessKey = m" data-widget="close">Quick Launch</a>
<:include admin/include/toolbar_article.tmpl:>
  </header>
  <:-.if kids.size:>
  <fieldset>
    <legend>Children</legend>
    <:-.if request.user_can("bse_edit_reorder_children", article):>
    Sort by:
    <ul class="meta group">
      <li><a href="<:= cfg.admin_url("reorder", { "stepparent": article.id, "sort": "title", "r": refresh }) :>">title</a></li>
      <li><a href="<:= cfg.admin_url("reorder", { "stepparent": article.id, "sort": "id", "r": refresh }) :>">date</a></li>
      <li><a href="<:= cfg.admin_url("reorder", { "stepparent": article.id, "sort": "listed", "r": refresh }) :>">listed</a></li>
      <li><a href="<:= cfg.admin_url("reorder", { "stepparent": article.id, "sort": "shuffle", "r": refresh }) :>">shuffle</a></li>
      <li><a href="<:= cfg.admin_url("reorder", { "stepparent": article.id, "reverse": 1, "r": refresh }) :>">reverse</a></li>
      <li><:ifCgi sort:><a href="<:= cfg.admin_url("add", { "id": article.id, "tree": cgi_tree }) :>">advanced &times;</a><:or:><a href="<:= cfg.admin_url("add", { "id": article.id, "_t": "kids", "tree": cgi_tree, "sort": 1 }) :>">advanced</a><:eif:></li>
    </ul>
    <:-.if cgi.param("sort"):>
<:include admin/include/edit_article_sort.tmpl optional:>
    <:-.end if:>
    <:-.end if:>
    <:-.define article :>
      <:-.set indicator = [] -:>
      <:-.if article.is_expired :>
        <:-% indicator.push("red") :>
      <:-.elsif !article.is_released :>
        <:-% indicator.push("white") :>
      <:-.elsif article.listed == 0 :>
        <:-% indicator.push("gray") :>
      <:-.elsif article.listed == 1 :>
        <:-% indicator.push("green") :>
      <:-.elsif article.listed == 2 :>
        <:-% indicator.push("orange") :>
      <:-.end if:>
      <li>
        <span class="<:-= globals.odd ? " odd" : "" :>">
          <:-.set globals.odd = !globals.odd :>
          <a href="<:= cfg.admin_url("add", { "id": article.id, "preview": 1 }) :>"<:.if article.parentid != parent.id :> data-widget="stepkid"<:.end if:>>
            <span class="indicator <:= indicator.join(" ") :>"></span>
            <:= article.titleAlias or article.title :><:.if article.titleAlias:> (<:= article.title :>)<:.end if:>
          </a>
          <span class="actions">
            <:-.set typename = article.generator.replace(/^(?:BSE::)?Generate::(\w+)$/, "$1") :>
            <:-.if article.parentid != parent.id :>
            <a href="<:= cfg.admin_url("add", { "id": parent.id, "stepkid": article.id, "referer": 1, "_t": "steps", "r": refresh }) :>" class="button gray small">Edit</a>
            <:-.if request.user_can("bse_edit_stepkid_delete", article) and request.user_can("bse_edit_stepparent_delete", parent) :>
            <a href="<:= cfg.admin_url("add", { "id": parent.id, "stepkid": article.id, "typename": typename, "del_stepkid": 1, "_csrfp": request.get_csrf_token("admin_remove_stepkid"), "r": refresh }) :>" class="button red small" data-action="Delete" data-object="Stepchild" data-confirm="Are you sure you want to remove the Stepchild relationship?" data-info="Continuing with this action will permanently remove this Stepchild relationship. This action does not delete the original <:= typename :>.">Delete</a>
            <:-.else:>
            <a class="button red small disabled">Delete</a>
            <:-.end if:>
            <:-.else:>
            <a href="<:= cfg.admin_url("add", { "id": article.id, "referer": 1 }) :>" class="button gray small">Edit</a>
            <:-.if request.user_can("bse_edit_delete_article", article) :>
            <a href="<:= cfg.admin_url("add", { "id": article.id, "remove": 1, "_csrfp": request.get_csrf_token("admin_remove_article"), "r": refresh }) :>" class="button red small" data-action="Delete" data-object="<:= typename :>" >Delete</a>
            <:-.else:>
            <a class="button red small disabled">Delete</a>
            <:-.end if:>
            <:-.end if:>
            <:-.if request.user_can("edit_reorder_children", parent) :>
            <:.call "move", "article": article, "parent": parent, "admin": 1, "r": refresh :>
            <:-.end if:>
          </span>
        </span>
      <:-# do not list children for step kids, could lead to infinite recursion :>
      <:-.if article.parentid == parent.id and level < 10 and cgi_tree :>
        <:-.set kids = [ article.allkids ] :>
        <:-.if kids.size :>
      <ul>
        <:-.for kid in kids:>
        <:-.call "article", "article": kid, "parent": article, "level": level+1 :>
        <:-.end for:>
      </ul>
        <:-.end if:>
      <:-.end if:>
      </li>
    <:-.end define :>
    <:-.set globals.odd = 1 :>
    <ul class="inset list tree">
      <:-.for kid in kids :>
      <:-.call "article", "article": kid, "parent": article, "level": 1 :>
      <:-.end for:>
    </ul>
  </fieldset>
  <:-.else:>
  <fieldset>
    <legend>Children</legend>
    <div class="center">
      <p><img src="/bse-admin/images/icons/alert.png" alt="Alert!" /></p>
      <p>No children to display</p>
      <:-.if request.user_can("bse_edit_add_child", article) or request.user_can("bse_edit_stepkid_add", article):>
      <p>
        <:-.if request.user_can("bse_edit_add_child", article) and cfg.entry("level names", article.level +1 ) :>
        <:-# if HaveChildType:>
        <:-.if article.generator =~ /Catalog/:>
        <a href="<:= cfg.admin_url("add", { "parentid": article.id, "type": "Catalog", "referer": 1 }) :>" data-icon="add" class="button white">New Catalog…</a>
        <a href="<:= cfg.admin_url("add", { "parentid": article.id, "type": "Product", "referer": 1 }) :>" data-icon="add" class="button white">New Product…</a>
        <:-.else:>
        <a href="<:= cfg.admin_url("add", { "parentid": article.id, "type": "Article", "referer": 1 }) :>" data-icon="add" class="button white">New Child…</a>
        <:-.end if:>
        <:-# eif HaveChildType:>
        <:-.end if:>
        <:-.if request.user_can("bse_edit_stepkid_add", article):>
        <a href="<:= cfg.admin_url("add", { "id": article.id, "_t": "steps", "referer": 1 }) :>" data-icon="add" class="button white">New Stepchild…</a>
        <:-.end if:>
      </p>
      <:-.end if:>
    </div>
  </fieldset>
  <:-.end if:>
  <p class="buttons">
    <a href="<:= done_url:>" accesskey="." title="AccessKey = ." class="button white">Done</a>
  </p>
</div>