<:-.set is_article = article.id and article.id > 0 -:>
<:-.set typename = is_article ? "" : "Site" -:>
<:-.wrap "admin/base.tmpl", "title": "New " _ typename _ " Image" :>
<div class="window dialog">
  <header>
    <:-.set pagetitle = params.title _ ( is_article ? " - " _ ( article.titleAlias or article.title ) _ " (Level " _ article.level _ ")" : "" ) :>
    <h1><:= pagetitle:></h1>
  </header>
  <form action="<:script:>" method="post" enctype="multipart/form-data" data-object="Image">
    <input type="hidden" name="id" value="<:article id:>" />
    <input type="hidden" name="_t" value="imgupload" />
    <:csrfp admin_save_image hidden:>
    <:csrfp admin_add_image hidden:>
    <input type="hidden" name="r" value="<:switch:><:case Cgi r:><:cgi r:><:case And [cgi referer] [referer]:><:replace [referer] "&amp;referer=[0-9]+":><:case default:><:script:>?id=<:article id:><:endswitch:>" />
    <fieldset>
      <legend>Resource</legend>
      <div>
        <label for="image">Image <span class="required">*</span> <:error_img image:></label>
        <span>
          <input type="file" name="image" id="image" accesskey="f" title="AccessKey = f" required="required" autofocus="autofocus" class="<:ifError_img image:>error<:eif:>" />
          <:help image image:>
        </span>
      </div>
      <div>
        <label for="name">Name <:error_img name:></label>
        <span>
          <input type="text" name="name" id="name" value="<:old name:>" class="<:ifError_img name:>error<:eif:>" />
          <:help image name:>
        </span>
      </div>
    </fieldset>
    <details>
      <summary>More attributes</summary>
      <fieldset>
        <legend>Properties</legend>
        <div>
          <label for="alt">Alt <:error_img altIn:></label>
          <span>
            <input type="text" name="altIn" id="alt" value="<:old altIn:>" class="<:ifError_img altIn:>error<:eif:>" />
            <:help image alt:>
          </span>
        </div>
        <div>
          <label for="url">URL <:error_img url:></label>
          <span>
            <input type="text" name="url" id="url" value="<:old url:>" class="<:ifError_img url:>error<:eif:>" />
            <:help image url:>
          </span>
        </div>
        <div>
          <label for="storage">Storage <:error_img storage:></label>
          <span>
            <select name="storage" id="storage">
              <option value="">(Auto)</option>
              <:- iterator begin image_stores:>
              <option value="<:image_store name:>" <:ifOld storage:>selected="selected"<:eif:>><:image_store description:></option>
              <:- iterator end image_stores:>
            </select>
            <:help image storage:>
          </span>
        </div>
      </fieldset>
      <fieldset>
        <legend>Tags</legend>
        <input type="hidden" name="_save_tags" value="1" />
        <:-.set tags = [ cgi.param("tags") ] -:>
        <:-.if tags.size == 0 :>
          <:-% tags.unshift("") :>
        <:-.end if :>
        <:-.for tag in tags :>
        <div class="field">
          <label for="tag_<:= loop.count :>"><:= loop.is_first ? "Tag name" : "" :> <:.call "error_img_n", "name":"tags", "index":loop.index :></label>
          <span class="field-input">
            <input type="text" name="tags" id="tag_<:= loop.count :>" value="<:= tag :>" class="<:.call "error_classname", "name":"tags", "index":loop.index :>"/>
          </span>
          <:-.if loop.is_first:>
          <span class="field-actions">
            <button class="button white small" onclick="plus(this); return false;" data-icon="add" data-icon-only="true">Add</button>
            <button class="button white small" onclick="minus(this); return false;" disabled="disabled" data-icon="subtract" data-icon-only="true">Delete</button>
          </span>
          <:-.end if:>
        </div>
        <:-.end for:>
      </fieldset>
    </details>
    <div>
      <div id="drop-target" data-drop="target" style="display: none;">
        <h2>Quick Image Upload</h2>
        Drag and drop images here
      </div>
      <ul id="drop-list" data-drop="list" class="full list inset" style="display: none;"></ul>
    </div>
    <script type="text/javascript">
    if (window.FormData) {
        document.observe("dom:loaded", function() {
        
            var pendingClass = "debug";
            var activeClass = "info";
            var completedClass = "notice";
            var errorClass = "error";
            var dragClass = "notice over";
            
            var dropTarget = $("drop-target");
            var dropList = $("drop-list");
            var dropDone = $$("[data-action=Cancel]")[0];
        
            var activeFiles = [];
            var transferActive = false;
    
            dropTarget.show();

            function startTransfer() {
                var file = activeFiles.shift();
                file.element.removeClassName(pendingClass); // pending
                file.element.addClassName(activeClass); // active
                var fd = new FormData();
                fd.append("image", file.file, file.name);
                fd.append("id", "<:= article.id:>");
                fd.append("addimg", "1");
                var r = new XMLHttpRequest();
                r.open("POST", "<:= cfg.admin_url("add"):>", true);
                try {
                    r.responseType = "json";
                } catch (e) {} // ignore failure, like on Safari
                r.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                r.upload.addEventListener("progress", function(e) {
                    // update progress bar
                    file.pb.show();
                    file.pb.update(Math.round(100 * e.loaded / e.total));
                    file.pb.max = e.total;
                    file.pb.value = e.loaded;
                });
                r.addEventListener("load", function(e) {
                    var r = e.target;
                    file.element.removeClassName(activeClass); // inactive
                    file.pb.hide();
                    transferActive = false;
                    if (r.status == 200) {
                        var resp = r.response;
                        if (r.responseType != "json") {
                            // IE/Safari doesn't support it
                            resp = JSON.parse(r.responseText);
                        }
                        if (resp.success != 0) {
                            file.element.update(file.file.name);
                            file.element.addClassName(completedClass); // complete
                        } else {
                            var error = "unknown";
                            if (resp.message) {
                                error = resp.message;
                            } else if (resp.errors && resp.errors.image) {
                                error = resp.errors.image;
                            } else if (resp.error_code) {
                                error = resp.error_code;
                            }
    
                            file.element.update(file.file.name + ": " + error);
                            file.element.addClassName(errorClass);
                        }
                    } else {
                        file.element.addClassName(errorClass);
                        file.element.update(file.file.name + ": " + r.status + " " + r.statusText);
                    }
                    if (activeFiles.length != 0) {
                        startTransfer();
                    }
                });
                r.addEventListener(errorClass, function(e) {
                    var r = e.target;
                    transferActive = false;
                    file.element.removeClassName(activeClass); // inactive
                    file.element.addClassName(errorClass);
                    file.element.update(file.file.name + ": " + r.status + " " + r.statusText);
                    if (activeFiles.length != 0) {
                        startTransfer();
                    }
                });
                transferActive = true;
                r.send(fd);
            }
    
            dropTarget.addEventListener("dragenter", function(e) {
                e.stopPropagation();
                e.preventDefault();
            }, false);
            dropTarget.addEventListener("dragleave", function(e) {
                this.removeClassName(dragClass);
                e.stopPropagation();
                e.preventDefault();
            }, false);
            dropTarget.addEventListener("dragover", function(e) {
                this.addClassName(dragClass);
                e.stopPropagation();
                e.preventDefault();
            }, false);
            dropTarget.addEventListener("drop", function(e) {
                this.removeClassName(dragClass);
                e.stopPropagation();
                e.preventDefault();
    
                var f = e.dataTransfer.files;
                dropList.show();
                for (var i = 0; i < f.length; ++i) {
                    var file = f[i];
                    var fe = new Element("li", {
                        className: pendingClass // pending
                    });
                    var pb = new Element("progress");
                    fe.update(file.name);
                    fe.appendChild(pb);
                    dropList.appendChild(fe);
                    activeFiles.push({
                        file: file,
                        element: fe,
                        pb: pb
                    });
                }
                dropDone.update("Done");
                if (!transferActive) {
                    startTransfer();
                }
            }, false);
        });
    }
    </script>
    <script type="text/javascript">
        function plus(ele) {
            var ele = $(ele).up('div');
            var clone = ele.clone(true);
            clone.down('input[name="tags"]').clear().removeAttribute("class");
            clone.down('label').update(' ');
            var disabled = clone.down('button[disabled]');
            if (disabled) {
                disabled.removeAttribute('disabled');
            }
            ele.insert({after: clone});
        };
    
        function minus(ele) {
            var ele = $(ele).up('div').remove();
        };
    </script>
    <p class="buttons">
      <a href="<:switch:><:case Cgi r:><:cgi r:><:case And [cgi referer] [referer]:><:replace [referer] "&amp;referer=[0-9]+":><:case default:><:script:>?id=<:article id:><:endswitch:>" accesskey="." title="AccessKey = ." data-action="Cancel" class="button white">Cancel</a>
      <:- if UserCan bse_edit_images_add:article:>
      <input type="submit" name="addimg" value="Upload Image" accesskey="u" title="AccessKey = u" class="button green" />
      <:- eif UserCan:>
    </p>
  </form>
</div>